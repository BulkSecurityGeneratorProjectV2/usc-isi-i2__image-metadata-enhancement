@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix medusa: <http://medusa.usc.edu/ontology/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix schema: <http://schema.org/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix km-dev: <http://isi.edu/integration/karma/dev#> .

_:node19kv9sb23x1 a km-dev:R2RMLMapping ;
	km-dev:sourceName "medusa-cam-sample.json" ;
	km-dev:modelPublicationTime "1431274662980"^^xsd:long ;
	km-dev:modelVersion "1.7" ;
	km-dev:hasInputColumns "[[{\"columnName\":\"Location (long, lat, accuracy)\"}],[{\"columnName\":\"Azimuth, Pitch, Roll\"}],[{\"columnName\":\"Image\"}]]" ;
	km-dev:hasOutputColumns "[[{\"columnName\":\"photo_uri\"}],[{\"columnName\":\"lat\"}],[{\"columnName\":\"azimuth\"}],[{\"columnName\":\"accuracy\"}],[{\"columnName\":\"photo_location_uri\"}],[{\"columnName\":\"pitch\"}],[{\"columnName\":\"long\"}],[{\"columnName\":\"roll\"}]]" ;
	km-dev:hasModelLabel "medusa-cam" ;
	km-dev:hasBaseURI "http://medusa.usc.edu/data/medusa/" ;
	km-dev:hasWorksheetHistory """[
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"Location (long, lat, accuracy)\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"long\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return md_getLong(getValue(\\\"Location (long, lat, accuracy)\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Location (long, lat, accuracy)\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"long\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"Location (long, lat, accuracy)\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"lat\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return md_getLat(getValue(\\\"Location (long, lat, accuracy)\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Location (long, lat, accuracy)\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"lat\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"Location (long, lat, accuracy)\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"accuracy\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return md_getAccuracy(getValue(\\\"Location (long, lat, accuracy)\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Location (long, lat, accuracy)\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"accuracy\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"properties\",
                \"value\": {
                    \"hasServiceProperties\": false,
                    \"hasPrefix\": false,
                    \"graphLabel\": \"medusa-cam\",
                    \"hasBaseURI\": false
                },
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetWorksheetPropertiesCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"properties\",
                \"value\": {
                    \"hasServiceProperties\": false,
                    \"hasPrefix\": false,
                    \"graphLabel\": \"\",
                    \"hasBaseURI\": true,
                    \"baseURI\": \"http://medusa.usc.edu/data/medusa/\"
                },
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetWorksheetPropertiesCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"Image\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"photo_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return md_photo_uri(getValue(\\\"Image\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Image\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"photo_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"photo_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/Photograph\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/Photograph1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:Photograph1 (add)\",
                    \"DomainId\": \"http://schema.org/Photograph1 (add)\",
                    \"DomainUri\": \"http://schema.org/Photograph\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"photo_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"photo_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"lat\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/latitude\",
                    \"DomainLabel\": \"schema:GeoCoordinates1 (add)\",
                    \"DomainId\": \"http://schema.org/GeoCoordinates1 (add)\",
                    \"DomainUri\": \"http://schema.org/GeoCoordinates\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"lat\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"lat\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP12:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/GeoCoordinates1\",
                    \"edgeId\": \"http://schema.org/geo\",
                    \"edgeTargetId\": \"http://schema.org/GeoCoordinates1\",
                    \"edgeSourceId\": \"http://schema.org/Place1 (add)\",
                    \"edgeSourceUri\": \"http://schema.org/Place\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP12:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/Place1\",
                    \"edgeId\": \"http://schema.org/contentLocation\",
                    \"edgeTargetId\": \"http://schema.org/Place1\",
                    \"edgeSourceId\": \"http://schema.org/Photograph1\",
                    \"edgeSourceUri\": \"http://schema.org/Photograph\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"long\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/longitude\",
                    \"DomainLabel\": \"schema:GeoCoordinates1\",
                    \"DomainId\": \"http://schema.org/GeoCoordinates1\",
                    \"DomainUri\": \"http://schema.org/GeoCoordinates\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"long\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"long\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"Azimuth, Pitch, Roll\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"azimuth\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return md_getAzimuth(getValue(\\\"Azimuth, Pitch, Roll\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Azimuth, Pitch, Roll\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"azimuth\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"Azimuth, Pitch, Roll\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"pitch\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return md_getPitch(getValue(\\\"Azimuth, Pitch, Roll\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Azimuth, Pitch, Roll\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"pitch\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"Azimuth, Pitch, Roll\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"roll\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return md_getRoll(getValue(\\\"Azimuth, Pitch, Roll\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Azimuth, Pitch, Roll\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"roll\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"roll\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://medusa.usc.edu/ontology/roll\",
                    \"DomainLabel\": \"medusa:SensorOrientation1 (add)\",
                    \"DomainId\": \"http://medusa.usc.edu/ontology/SensorOrientation1 (add)\",
                    \"DomainUri\": \"http://medusa.usc.edu/ontology/SensorOrientation\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"roll\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"roll\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP14:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://medusa.usc.edu/ontology/SensorOrientation1\",
                    \"edgeId\": \"http://medusa.usc.edu/ontology/sensorOrientation\",
                    \"edgeTargetId\": \"http://medusa.usc.edu/ontology/SensorOrientation1\",
                    \"edgeSourceId\": \"http://schema.org/Photograph1\",
                    \"edgeSourceUri\": \"http://schema.org/Photograph\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"pitch\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://medusa.usc.edu/ontology/pitch\",
                    \"DomainLabel\": \"medusa:SensorOrientation1\",
                    \"DomainId\": \"http://medusa.usc.edu/ontology/SensorOrientation1\",
                    \"DomainUri\": \"http://medusa.usc.edu/ontology/SensorOrientation\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"pitch\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"pitch\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"azimuth\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://medusa.usc.edu/ontology/azimuth\",
                    \"DomainLabel\": \"medusa:SensorOrientation1\",
                    \"DomainId\": \"http://medusa.usc.edu/ontology/SensorOrientation1\",
                    \"DomainUri\": \"http://medusa.usc.edu/ontology/SensorOrientation\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"azimuth\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"azimuth\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"photo_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"photo_location_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return md_photo_location_uri(getValue(\\\"photo_uri\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"photo_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"photo_location_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"photo_location_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/Place\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/Place1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:Place1\",
                    \"DomainId\": \"http://schema.org/Place1\",
                    \"DomainUri\": \"http://schema.org/Place\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"photo_location_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"photo_location_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"accuracy\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://medusa.usc.edu/ontology/accuracy\",
                    \"DomainLabel\": \"schema:GeoCoordinates1\",
                    \"DomainId\": \"http://schema.org/GeoCoordinates1\",
                    \"DomainUri\": \"http://schema.org/GeoCoordinates\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"accuracy\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"accuracy\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    }
]""" .

km-dev:TriplesMap_22d1a4ec-d8ac-4996-9b55-c72640cc1da1 a rr:TriplesMap .

_:node19kv9sb23x1 km-dev:hasTriplesMap km-dev:TriplesMap_22d1a4ec-d8ac-4996-9b55-c72640cc1da1 .

km-dev:TriplesMap_22d1a4ec-d8ac-4996-9b55-c72640cc1da1 km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x2 rr:tableName "medusa-cam-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasLogicalTable _:node19kv9sb23x2 .

km-dev:TriplesMap_22d1a4ec-d8ac-4996-9b55-c72640cc1da1 rr:logicalTable _:node19kv9sb23x2 ;
	rr:subjectMap _:node19kv9sb23x3 .

_:node19kv9sb23x1 km-dev:hasSubjectMap _:node19kv9sb23x3 .

_:node19kv9sb23x3 km-dev:isPartOfMapping _:node19kv9sb23x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://medusa.usc.edu/ontology/SensorOrientation1" ;
	rr:class medusa:SensorOrientation ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "medusa:SensorOrientation1" .

km-dev:PredicateObjectMap_01f70127-eafe-4e67-bd73-472179c9df61 rr:predicate medusa:azimuth .

_:node19kv9sb23x4 rr:column "azimuth" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasObjectMap _:node19kv9sb23x4 .

km-dev:PredicateObjectMap_01f70127-eafe-4e67-bd73-472179c9df61 rr:objectMap _:node19kv9sb23x4 .

km-dev:TriplesMap_22d1a4ec-d8ac-4996-9b55-c72640cc1da1 rr:predicateObjectMap km-dev:PredicateObjectMap_01f70127-eafe-4e67-bd73-472179c9df61 .

km-dev:PredicateObjectMap_01f70127-eafe-4e67-bd73-472179c9df61 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_01f70127-eafe-4e67-bd73-472179c9df61 .

km-dev:PredicateObjectMap_a159292b-4adf-40a7-8545-763444104c77 rr:predicate medusa:pitch .

_:node19kv9sb23x5 rr:column "pitch" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasObjectMap _:node19kv9sb23x5 .

km-dev:PredicateObjectMap_a159292b-4adf-40a7-8545-763444104c77 rr:objectMap _:node19kv9sb23x5 .

km-dev:TriplesMap_22d1a4ec-d8ac-4996-9b55-c72640cc1da1 rr:predicateObjectMap km-dev:PredicateObjectMap_a159292b-4adf-40a7-8545-763444104c77 .

km-dev:PredicateObjectMap_a159292b-4adf-40a7-8545-763444104c77 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_a159292b-4adf-40a7-8545-763444104c77 .

km-dev:PredicateObjectMap_e04a4575-58aa-4a8e-805d-c958d6e32a4d rr:predicate medusa:roll .

_:node19kv9sb23x6 rr:column "roll" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasObjectMap _:node19kv9sb23x6 .

km-dev:PredicateObjectMap_e04a4575-58aa-4a8e-805d-c958d6e32a4d rr:objectMap _:node19kv9sb23x6 .

km-dev:TriplesMap_22d1a4ec-d8ac-4996-9b55-c72640cc1da1 rr:predicateObjectMap km-dev:PredicateObjectMap_e04a4575-58aa-4a8e-805d-c958d6e32a4d .

km-dev:PredicateObjectMap_e04a4575-58aa-4a8e-805d-c958d6e32a4d a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_e04a4575-58aa-4a8e-805d-c958d6e32a4d .

km-dev:TriplesMap_c11a0e51-667f-428e-9ee3-d5af48e7652a a rr:TriplesMap .

_:node19kv9sb23x1 km-dev:hasTriplesMap km-dev:TriplesMap_c11a0e51-667f-428e-9ee3-d5af48e7652a .

km-dev:TriplesMap_c11a0e51-667f-428e-9ee3-d5af48e7652a km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x7 rr:tableName "medusa-cam-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasLogicalTable _:node19kv9sb23x7 .

km-dev:TriplesMap_c11a0e51-667f-428e-9ee3-d5af48e7652a rr:logicalTable _:node19kv9sb23x7 ;
	rr:subjectMap _:node19kv9sb23x8 .

_:node19kv9sb23x1 km-dev:hasSubjectMap _:node19kv9sb23x8 .

_:node19kv9sb23x8 km-dev:isPartOfMapping _:node19kv9sb23x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/GeoCoordinates1" ;
	rr:class schema:GeoCoordinates ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "schema:GeoCoordinates1" .

km-dev:PredicateObjectMap_41246dc5-bb5c-433e-8057-c49846400580 rr:predicate medusa:accuracy .

_:node19kv9sb23x9 rr:column "accuracy" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasObjectMap _:node19kv9sb23x9 .

km-dev:PredicateObjectMap_41246dc5-bb5c-433e-8057-c49846400580 rr:objectMap _:node19kv9sb23x9 .

km-dev:TriplesMap_c11a0e51-667f-428e-9ee3-d5af48e7652a rr:predicateObjectMap km-dev:PredicateObjectMap_41246dc5-bb5c-433e-8057-c49846400580 .

km-dev:PredicateObjectMap_41246dc5-bb5c-433e-8057-c49846400580 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_41246dc5-bb5c-433e-8057-c49846400580 .

km-dev:PredicateObjectMap_c9f42ddf-7f22-4df9-aa10-55c60ff83159 rr:predicate schema:latitude .

_:node19kv9sb23x10 rr:column "lat" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasObjectMap _:node19kv9sb23x10 .

km-dev:PredicateObjectMap_c9f42ddf-7f22-4df9-aa10-55c60ff83159 rr:objectMap _:node19kv9sb23x10 .

km-dev:TriplesMap_c11a0e51-667f-428e-9ee3-d5af48e7652a rr:predicateObjectMap km-dev:PredicateObjectMap_c9f42ddf-7f22-4df9-aa10-55c60ff83159 .

km-dev:PredicateObjectMap_c9f42ddf-7f22-4df9-aa10-55c60ff83159 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_c9f42ddf-7f22-4df9-aa10-55c60ff83159 .

km-dev:PredicateObjectMap_e502da26-4011-44f4-a9d8-e159aa108ba0 rr:predicate schema:longitude .

_:node19kv9sb23x11 rr:column "long" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasObjectMap _:node19kv9sb23x11 .

km-dev:PredicateObjectMap_e502da26-4011-44f4-a9d8-e159aa108ba0 rr:objectMap _:node19kv9sb23x11 .

km-dev:TriplesMap_c11a0e51-667f-428e-9ee3-d5af48e7652a rr:predicateObjectMap km-dev:PredicateObjectMap_e502da26-4011-44f4-a9d8-e159aa108ba0 .

km-dev:PredicateObjectMap_e502da26-4011-44f4-a9d8-e159aa108ba0 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_e502da26-4011-44f4-a9d8-e159aa108ba0 .

km-dev:TriplesMap_3f3046e1-0b57-4ba0-a829-a535fa1294a9 a rr:TriplesMap .

_:node19kv9sb23x1 km-dev:hasTriplesMap km-dev:TriplesMap_3f3046e1-0b57-4ba0-a829-a535fa1294a9 .

km-dev:TriplesMap_3f3046e1-0b57-4ba0-a829-a535fa1294a9 km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x12 rr:tableName "medusa-cam-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasLogicalTable _:node19kv9sb23x12 .

km-dev:TriplesMap_3f3046e1-0b57-4ba0-a829-a535fa1294a9 rr:logicalTable _:node19kv9sb23x12 ;
	rr:subjectMap _:node19kv9sb23x13 .

_:node19kv9sb23x1 km-dev:hasSubjectMap _:node19kv9sb23x13 .

_:node19kv9sb23x13 km-dev:isPartOfMapping _:node19kv9sb23x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/Photograph1" ;
	rr:class schema:Photograph ;
	rr:template "{photo_uri}" ;
	a km-dev:steinerTreeRootNode .

km-dev:PredicateObjectMap_8ebdf502-c703-4eed-9e04-b9229c4d2d9e rr:predicate medusa:sensorOrientation .

km-dev:RefObjectMap_13d270f9-7676-44d8-a36d-a0512624bb6f a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_22d1a4ec-d8ac-4996-9b55-c72640cc1da1 ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasObjectMap km-dev:RefObjectMap_13d270f9-7676-44d8-a36d-a0512624bb6f .

km-dev:PredicateObjectMap_8ebdf502-c703-4eed-9e04-b9229c4d2d9e rr:objectMap km-dev:RefObjectMap_13d270f9-7676-44d8-a36d-a0512624bb6f .

km-dev:TriplesMap_3f3046e1-0b57-4ba0-a829-a535fa1294a9 rr:predicateObjectMap km-dev:PredicateObjectMap_8ebdf502-c703-4eed-9e04-b9229c4d2d9e .

km-dev:PredicateObjectMap_8ebdf502-c703-4eed-9e04-b9229c4d2d9e a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_8ebdf502-c703-4eed-9e04-b9229c4d2d9e .

km-dev:PredicateObjectMap_b2045239-51d3-45c1-baef-aca93a6a5361 rr:predicate schema:contentLocation .

km-dev:RefObjectMap_1b962e50-e158-468e-b91e-a54c8fd614ec a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_ed25b890-f942-4621-8de0-368f7040b502 ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasObjectMap km-dev:RefObjectMap_1b962e50-e158-468e-b91e-a54c8fd614ec .

km-dev:PredicateObjectMap_b2045239-51d3-45c1-baef-aca93a6a5361 rr:objectMap km-dev:RefObjectMap_1b962e50-e158-468e-b91e-a54c8fd614ec .

km-dev:TriplesMap_3f3046e1-0b57-4ba0-a829-a535fa1294a9 rr:predicateObjectMap km-dev:PredicateObjectMap_b2045239-51d3-45c1-baef-aca93a6a5361 .

km-dev:PredicateObjectMap_b2045239-51d3-45c1-baef-aca93a6a5361 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_b2045239-51d3-45c1-baef-aca93a6a5361 .

km-dev:TriplesMap_ed25b890-f942-4621-8de0-368f7040b502 a rr:TriplesMap .

_:node19kv9sb23x1 km-dev:hasTriplesMap km-dev:TriplesMap_ed25b890-f942-4621-8de0-368f7040b502 .

km-dev:TriplesMap_ed25b890-f942-4621-8de0-368f7040b502 km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x14 rr:tableName "medusa-cam-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasLogicalTable _:node19kv9sb23x14 .

km-dev:TriplesMap_ed25b890-f942-4621-8de0-368f7040b502 rr:logicalTable _:node19kv9sb23x14 ;
	rr:subjectMap _:node19kv9sb23x15 .

_:node19kv9sb23x1 km-dev:hasSubjectMap _:node19kv9sb23x15 .

_:node19kv9sb23x15 km-dev:isPartOfMapping _:node19kv9sb23x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/Place1" ;
	rr:class schema:Place ;
	rr:template "{photo_location_uri}" .

km-dev:PredicateObjectMap_1b4d4e3b-e8a8-43be-a583-bc5e50ca8ddc rr:predicate schema:geo .

km-dev:RefObjectMap_a4d73476-de91-4a80-93e6-a2132eb3eb3d a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_c11a0e51-667f-428e-9ee3-d5af48e7652a ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasObjectMap km-dev:RefObjectMap_a4d73476-de91-4a80-93e6-a2132eb3eb3d .

km-dev:PredicateObjectMap_1b4d4e3b-e8a8-43be-a583-bc5e50ca8ddc rr:objectMap km-dev:RefObjectMap_a4d73476-de91-4a80-93e6-a2132eb3eb3d .

km-dev:TriplesMap_ed25b890-f942-4621-8de0-368f7040b502 rr:predicateObjectMap km-dev:PredicateObjectMap_1b4d4e3b-e8a8-43be-a583-bc5e50ca8ddc .

km-dev:PredicateObjectMap_1b4d4e3b-e8a8-43be-a583-bc5e50ca8ddc a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19kv9sb23x1 .

_:node19kv9sb23x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_1b4d4e3b-e8a8-43be-a583-bc5e50ca8ddc .
